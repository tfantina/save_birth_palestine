//media queries
@mixin media-xs {
  @media (min-width: 520px) {
    @content;
  }
}

@mixin media-sm {
  @media (min-width: 600px) {
    @content;
  }
}

@mixin media-md {
  @media (min-width: 768px) {
    @content;
  }
}

@mixin media-lg {
  @media (min-width: 992px) {
    @content;
  }
}

@mixin media-xl {
  @media (min-width: 1200px) {
    @content;
  }
}

@mixin media-xx {
  @media (min-width: 1500px) {
    @content;
  }
}


// Utopia sizing
$space-3xs: clamp(0.3125rem, 0.3125rem + 0vi, 0.3125rem);
$space-2xs: clamp(0.5625rem, 0.5408rem + 0.1087vi, 0.625rem);
$space-xs: clamp(0.875rem, 0.8533rem + 0.1087vi, 0.9375rem);
$space-s: clamp(1.125rem, 1.0815rem + 0.2174vi, 1.25rem);
$space-m: clamp(1.6875rem, 1.6223rem + 0.3261vi, 1.875rem);
$space-l: clamp(2.25rem, 2.163rem + 0.4348vi, 2.5rem);
$space-xl: clamp(3.375rem, 3.2446rem + 0.6522vi, 3.75rem);
$space-2xl: clamp(4.5rem, 4.3261rem + 0.8696vi, 5rem);
$space-3xl: clamp(6.75rem, 6.4891rem + 1.3043vi, 7.5rem);

// One up pairs
$space-3xs-2xs: clamp(0.3125rem, 0.2038rem + 0.5435vi, 0.625rem);
$space-2xs-xs: clamp(0.5625rem, 0.4321rem + 0.6522vi, 0.9375rem);
$space-xs-s: clamp(0.875rem, 0.7446rem + 0.6522vi, 1.25rem);
$space-s-m: clamp(1.125rem, 0.8641rem + 1.3043vi, 1.875rem);
$space-m-l: clamp(1.6875rem, 1.4049rem + 1.413vi, 2.5rem);
$space-l-xl: clamp(2.25rem, 1.7283rem + 2.6087vi, 3.75rem);
$space-xl-2xl: clamp(3.375rem, 2.8098rem + 2.8261vi, 5rem);
$space-2xl-3xl: clamp(4.5rem, 3.4565rem + 5.2174vi, 7.5rem);

// Flexbox
.f-row {
  display: flex;
  flex-wrap: wrap;
}

@mixin f-row {
  display: flex;
  flex-wrap: wrap;
}

.f-col {
  display: flex;
  flex-direction: column;
}

@mixin f-col {
  display: flex;
  flex-direction: column;
}

$column: calc(100% / 12);
$columns: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);

@mixin columns($size_prefix: '-') {
  @each $value in $columns {
    &#{$size_prefix}#{$value} {
      flex: 0 0 auto;
      width: calc(#{$column} * #{$value});
    }
  }
}

.col {
  @include columns;
}

@include media-xs {
  .col-xs {
    @include columns();
  }
}

@include media-sm {
  .col-sm {
    @include columns();
  }
}

@include media-md {
  .col-md {
    @include columns();
  }
}

@include media-lg {
  .col-lg {
    @include columns();
  }
}

@include media-xl {
  .col-xl {
    @include columns();
  }
}

@include media-xx {
  .col-xx {
    @include columns();
  }
}

// Flex Alignments

.self-start {
  align-self: flex-start;
}

.self-center {
  align-self: center;
}

.self-end {
  align-self: flex-end;
}

.align-center {
  align-items: center;
}

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-between {
  justify-content: space-between;
}

// Positioning
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

@mixin center {
  margin-left: auto;
  margin-right: auto;
}

@mixin justify-content($position: 'center') {
  justify-content: $position;
}

@mixin align-content($position: 'center') {
  align-content: $position;
}

@mixin align-items($position: 'center') {
  align-items: $position;
}

@mixin grid($columns: 12) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
}

// Margins and Padding
$sizes: ($space-3xs, $space-2xs, $space-xs, $space-s $space-m, $space-l, $space-xl, $space-2xl, $space-3xl);
$sizenames: ('3xs', '2sx', 'xs', 's', 'm', 'l', 'xl', '2xl', '3xl');
$i: 1;


@function name($i) {
  @return nth($sizenames, $i);
}

@mixin sizing($type, $prefix: '') {
  @each $value in $sizes {
    &#{$prefix}-#{name($i)} {
      #{$type}: #{$value};
    }

    $i: $i + 1;
  }
}

@mixin sizing-axis($type1, $type2) {
  @each $value in $sizes {
    &-#{name($i)} {
      #{$type1}: #{$value};
      #{$type2}: #{$value};
    }

    $i: $i + 1;
  }
}


.p {
  @include sizing('padding');
  @include sizing('padding-top', 't');
  @include sizing('padding-right', 'r');
  @include sizing('padding-bottom', 'b');
  @include sizing('padding-left', 'l');
}

.px {
  @include sizing-axis('padding-left', 'padding-right')
}


.py {
  @include sizing-axis('padding-top', 'padding-bottom');
}

.m {
  @include sizing('margin');
  @include sizing('mtop', 't');
  @include sizing('mright', 'r');
  @include sizing('mbottom', 'b');
  @include sizing('mleft', 'l');
}

.my {
  @include sizing-axis('margin-top', 'margin-bottom');
}

.mx {
  @include sizing-axis('margin-right', 'margin-left');
}

@mixin py($amt: $space-xs) {
  padding-top: $amt;
  padding-bottom: $amt;
}

@mixin px($amt: $space-xs) {
  padding-left: $amt;
  padding-right: $amt;
}

@mixin my($amt: $space-xs) {
 margin-top: $amt;
 margin-bottom: $amt;
}

@mixin mx($amt: $space-xs) {
 margin-left: $amt;
 margin-right: $amt;
}

body {
  margin: 0px;
  padding: 0px;
}

.col,
.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11,
.col-12 {
  display: flex;
  @include justify-content(center);
  box-sizing: border-box;
  @include py(0.5rem);
  @include px(0.5rem);
}

.section {
  @include center();
  // padding: 1rem;
  // margin: 0.5rem;
}
